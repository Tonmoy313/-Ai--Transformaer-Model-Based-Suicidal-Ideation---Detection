{"cells":[{"cell_type":"code","source":["# from google.colab import drive\n","# drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V-EIu3AT26PS","executionInfo":{"status":"ok","timestamp":1699766379105,"user_tz":-360,"elapsed":22810,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"e1c10c98-8e92-4673-ebfe-acc71ff11d71"},"id":"V-EIu3AT26PS","execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# **Pacakges**"],"metadata":{"id":"lgTxgew_3FtI"},"id":"lgTxgew_3FtI"},{"cell_type":"markdown","source":["**install packages**"],"metadata":{"id":"7jEgn9DQ3JwJ"},"id":"7jEgn9DQ3JwJ"},{"cell_type":"code","source":[],"metadata":{"id":"6-IXKR_z3L44"},"id":"6-IXKR_z3L44","execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**import Packages**"],"metadata":{"id":"MsAbCOhz3Hr4"},"id":"MsAbCOhz3Hr4"},{"cell_type":"code","source":["import nltk\n","import pandas as pd\n","\n","from nltk import word_tokenize\n","\n","# Download NLTK data (if not already downloaded)\n","nltk.download('punkt') # for tokenization"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R8fsF1RX3HGZ","executionInfo":{"status":"ok","timestamp":1699766508835,"user_tz":-360,"elapsed":2885,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"a7667cbf-aa05-4a94-8d6b-d090da3ccd1a"},"id":"R8fsF1RX3HGZ","execution_count":3,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","id":"17f3eea2","metadata":{"id":"17f3eea2"},"source":["# **Loading Data**"]},{"cell_type":"code","execution_count":18,"id":"f4e7712f","metadata":{"id":"f4e7712f","outputId":"458d0096-cacc-44bb-cfc9-dca13f123682","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699767574173,"user_tz":-360,"elapsed":3705,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(186841, 2)"]},"metadata":{},"execution_count":18}],"source":["df=pd.read_csv('/content/drive/MyDrive/Thesis/Defence/3. Cleaned_data (spacy).csv')\n","df.head()\n","df.shape\n","\n","# print(dfs.shape) # (107620, 3)"]},{"cell_type":"code","source":["dfc=df.copy()"],"metadata":{"id":"djuxsWGZ3W-o","executionInfo":{"status":"ok","timestamp":1699767574174,"user_tz":-360,"elapsed":3,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}}},"id":"djuxsWGZ3W-o","execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["# **Vocabulary**"],"metadata":{"id":"Ih8m4FQM_RfJ"},"id":"Ih8m4FQM_RfJ"},{"cell_type":"code","source":["from collections import defaultdict\n","\n","def create_vocabulary(text):\n","    word_counts = defaultdict(int)\n","    words = nltk.word_tokenize(text)\n","\n","    for word in words:\n","        if not word.isnumeric():\n","            word_counts[word] += 1\n","\n","    return word_counts\n","\n","df['vocabulary'] = df['text'].apply(create_vocabulary)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"E0P_Q4Q__Q_W","executionInfo":{"status":"ok","timestamp":1699767746031,"user_tz":-360,"elapsed":19,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"c6661514-7c18-4375-ac11-c65df4b3de07"},"id":"E0P_Q4Q__Q_W","execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                     text  class  \\\n","0       ex wife threaten suiciderecently I leave my wi...      0   \n","1       be I weird I do not get affect by compliment i...      1   \n","2       I be so losthello my name be adam 16 and I hav...      0   \n","3       honetly idki do not know what I be even do her...      0   \n","4       trigger warn excuse for self inflict burn I do...      0   \n","...                                                   ...    ...   \n","186836  I be a fucking scummy person and I can not cha...      0   \n","186837  I do something today I went sled with my frien...      1   \n","186838  you how you can tell I have so many friend and...      1   \n","186839  the usual stuff you find herei m not post this...      0   \n","186840  I still have not beat the first boss in hollow...      1   \n","\n","                                               vocabulary  \n","0       {'ex': 1, 'wife': 3, 'threaten': 3, 'suicidere...  \n","1       {'be': 2, 'I': 4, 'weird': 1, 'do': 2, 'not': ...  \n","2       {'I': 43, 'be': 27, 'so': 7, 'losthello': 1, '...  \n","3       {'honetly': 1, 'idki': 1, 'do': 8, 'not': 11, ...  \n","4       {'trigger': 1, 'warn': 1, 'excuse': 4, 'for': ...  \n","...                                                   ...  \n","186836  {'I': 18, 'be': 11, 'a': 5, 'fucking': 7, 'scu...  \n","186837  {'I': 5, 'do': 1, 'something': 1, 'today': 1, ...  \n","186838  {'you': 2, 'how': 1, 'can': 1, 'tell': 1, 'I':...  \n","186839  {'the': 11, 'usual': 1, 'stuff': 2, 'you': 1, ...  \n","186840  {'I': 4, 'still': 1, 'have': 2, 'not': 1, 'bea...  \n","\n","[186841 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-d92f34b6-7597-46f0-b8dd-352d16f0c7c5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>class</th>\n","      <th>vocabulary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ex wife threaten suiciderecently I leave my wi...</td>\n","      <td>0</td>\n","      <td>{'ex': 1, 'wife': 3, 'threaten': 3, 'suicidere...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>be I weird I do not get affect by compliment i...</td>\n","      <td>1</td>\n","      <td>{'be': 2, 'I': 4, 'weird': 1, 'do': 2, 'not': ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>I be so losthello my name be adam 16 and I hav...</td>\n","      <td>0</td>\n","      <td>{'I': 43, 'be': 27, 'so': 7, 'losthello': 1, '...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>honetly idki do not know what I be even do her...</td>\n","      <td>0</td>\n","      <td>{'honetly': 1, 'idki': 1, 'do': 8, 'not': 11, ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>trigger warn excuse for self inflict burn I do...</td>\n","      <td>0</td>\n","      <td>{'trigger': 1, 'warn': 1, 'excuse': 4, 'for': ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>186836</th>\n","      <td>I be a fucking scummy person and I can not cha...</td>\n","      <td>0</td>\n","      <td>{'I': 18, 'be': 11, 'a': 5, 'fucking': 7, 'scu...</td>\n","    </tr>\n","    <tr>\n","      <th>186837</th>\n","      <td>I do something today I went sled with my frien...</td>\n","      <td>1</td>\n","      <td>{'I': 5, 'do': 1, 'something': 1, 'today': 1, ...</td>\n","    </tr>\n","    <tr>\n","      <th>186838</th>\n","      <td>you how you can tell I have so many friend and...</td>\n","      <td>1</td>\n","      <td>{'you': 2, 'how': 1, 'can': 1, 'tell': 1, 'I':...</td>\n","    </tr>\n","    <tr>\n","      <th>186839</th>\n","      <td>the usual stuff you find herei m not post this...</td>\n","      <td>0</td>\n","      <td>{'the': 11, 'usual': 1, 'stuff': 2, 'you': 1, ...</td>\n","    </tr>\n","    <tr>\n","      <th>186840</th>\n","      <td>I still have not beat the first boss in hollow...</td>\n","      <td>1</td>\n","      <td>{'I': 4, 'still': 1, 'have': 2, 'not': 1, 'bea...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>186841 rows Ã— 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d92f34b6-7597-46f0-b8dd-352d16f0c7c5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d92f34b6-7597-46f0-b8dd-352d16f0c7c5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d92f34b6-7597-46f0-b8dd-352d16f0c7c5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46ce8597-3527-4328-a1d3-fd3126335756\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46ce8597-3527-4328-a1d3-fd3126335756')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46ce8597-3527-4328-a1d3-fd3126335756 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["**NonSuicide**"],"metadata":{"id":"u4eadRq7Hrwh"},"id":"u4eadRq7Hrwh"},{"cell_type":"code","source":["#nonSuicide = 1\n","nonSuicide_dictionar=defaultdict(int)\n","\n","\n","dfns=df[df['class']==1]\n","# print(dfs.shape) # (107620, 3)\n","for counts in dfns['vocabulary']:\n","  for word, count in counts.items():\n","    nonSuicide_dictionar[word]+=count\n","\n","df_non_suicide_vocbulay = pd.DataFrame(list(nonSuicide_dictionar.items()), columns=['word', 'count'])\n","\n","print(df_non_suicide_vocbulay)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"4TBQK552HrgD","executionInfo":{"status":"ok","timestamp":1699771099571,"user_tz":-360,"elapsed":17,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"f3d956a7-349e-405c-ddb8-acb37bfa92d2"},"id":"4TBQK552HrgD","execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  word   count\n","0                   be  321595\n","1                    I  404168\n","2                weird    3412\n","3                   do   99492\n","4                  not  109776\n","...                ...     ...\n","59171    jejeiejebeuue       1\n","59172     hebsoowbejrn       1\n","59173  xhdkeleoneidowk       1\n","59174           messin       1\n","59175          curling       1\n","\n","[59176 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-71417229-dfd7-47d0-9829-6c35477c4a62\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>be</td>\n","      <td>321595</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>I</td>\n","      <td>404168</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>weird</td>\n","      <td>3412</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>do</td>\n","      <td>99492</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>not</td>\n","      <td>109776</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>59171</th>\n","      <td>jejeiejebeuue</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>59172</th>\n","      <td>hebsoowbejrn</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>59173</th>\n","      <td>xhdkeleoneidowk</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>59174</th>\n","      <td>messin</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>59175</th>\n","      <td>curling</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>59176 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71417229-dfd7-47d0-9829-6c35477c4a62')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-71417229-dfd7-47d0-9829-6c35477c4a62 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-71417229-dfd7-47d0-9829-6c35477c4a62');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-596c6cb5-8e52-49dc-b53d-35f42ff07f75\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-596c6cb5-8e52-49dc-b53d-35f42ff07f75')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-596c6cb5-8e52-49dc-b53d-35f42ff07f75 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":54},{"output_type":"stream","name":"stdout","text":["Warning: total number of rows (59176) exceeds max_rows (20000). Limiting to first (20000) rows.\n"]}]},{"cell_type":"code","source":["# To whole dataset\n","top_100_words=df_non_suicide_vocbulay.nlargest(100,'count')\n","top_100_words.dtypes # dtype: series object\n","buzzing_words=list(top_100_words['word'])\n","print(buzzing_words)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"STfFreIsN2uN","executionInfo":{"status":"ok","timestamp":1699770783434,"user_tz":-360,"elapsed":421,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"688eaed3-f840-4e7f-dfd7-18ece65e2ad5"},"id":"STfFreIsN2uN","execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["['I', 'be', 'to', 'and', 'the', 'a', 'not', 'my', 'do', 'it', 'have', 'you', 'of', 'that', 'in', 'for', 'but', 'so', 'like', 'this', 'just', 'she', 'get', 'they', 'on', 'with', 'he', 'we', 'go', 'if', 'know', 'want', 'can', 'or', 'all', 'about', 'what', 'say', 'will', 'at', 'because', 'make', 'out', 'people', 'as', 'up', 'think', 'friend', 'feel', 'would', 'now', 'how', 'one', 'time', 'when', 'your', 'really', 'some', 'good', 'day', 'there', 'no', 'talk', 'from', 'school', 'tell', 'an', 'see', 'who', 'thing', 'then', 'even', 'year', 'girl', 'guy', 'need', 'post', 'other', 'why', 'try', 'help', 'start', 'well', 'more', 'ask', 'by', 'something', 'take', 's', 'only', 'look', 'her', 'life', 'someone', 'bad', 'any', 'come', 'here', 'never', 'could']\n"]}]},{"cell_type":"markdown","source":["**Suicide**"],"metadata":{"id":"MePU5LUXHmVr"},"id":"MePU5LUXHmVr"},{"cell_type":"code","source":["#Suicide = 0\n","\n","suicide_dictionary=defaultdict(int)\n","\n","dfs=df[df['class']==0]\n","# print(dfs.shape) # (107620, 3)\n","for counts in dfs['vocabulary']:\n","  for word, count in counts.items():\n","    suicide_dictionary[word]+=count\n","\n","df_suicide_vocbulay = pd.DataFrame(list(suicide_dictionary.items()), columns=['word', 'count'])\n","df_suicide_vocbulay\n","# Display the resulting DataFrame\n","print(df_suicide_vocbulay)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":2318},"id":"y98HrmRuHmER","executionInfo":{"status":"ok","timestamp":1699770859531,"user_tz":-360,"elapsed":18,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"31802c9b-ed5d-4d55-8538-5516b52d919e"},"id":"y98HrmRuHmER","execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  word    count\n","0                   ex     5635\n","1                 wife     3961\n","2             threaten     1874\n","3      suiciderecently        1\n","4                    I  2192571\n","...                ...      ...\n","86803           cutely        1\n","86804         beliieve        1\n","86805        asshatted        1\n","86806             why3        1\n","86807             conk        1\n","\n","[86808 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-a11cad7d-5b3d-4e51-a793-60cc09b2f002\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ex</td>\n","      <td>5635</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>wife</td>\n","      <td>3961</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>threaten</td>\n","      <td>1874</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>suiciderecently</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>I</td>\n","      <td>2192571</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>86803</th>\n","      <td>cutely</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>86804</th>\n","      <td>beliieve</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>86805</th>\n","      <td>asshatted</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>86806</th>\n","      <td>why3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>86807</th>\n","      <td>conk</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>86808 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a11cad7d-5b3d-4e51-a793-60cc09b2f002')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a11cad7d-5b3d-4e51-a793-60cc09b2f002 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a11cad7d-5b3d-4e51-a793-60cc09b2f002');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0b7c4a2d-941b-4b08-8ac3-53cc2c056e1a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b7c4a2d-941b-4b08-8ac3-53cc2c056e1a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0b7c4a2d-941b-4b08-8ac3-53cc2c056e1a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":53},{"output_type":"stream","name":"stdout","text":["Warning: total number of rows (86808) exceeds max_rows (20000). Limiting to first (20000) rows.\n"]}]},{"cell_type":"code","source":["# To whole dataset\n","top_100_words=df_suicide_vocbulay.nlargest(100,'count')\n","top_100_words.dtypes # dtype: series object\n","buzzing_words=list(top_100_words['word'])\n","print(buzzing_words)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y5u_0b-xLNAM","executionInfo":{"status":"ok","timestamp":1699769809042,"user_tz":-360,"elapsed":450,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"dfc3f126-dc80-4993-a7a7-7fb089003d08"},"id":"y5u_0b-xLNAM","execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["['I', 'be', 'to', 'and', 'not', 'the', 'my', 'have', 'a', 'do', 'it', 'of', 'that', 'in', 'but', 'for', 'just', 'this', 'so', 'want', 'can', 'with', 'feel', 'go', 'get', 'they', 'she', 'like', 'know', 'will', 'on', 'life', 'all', 'you', 'he', 'myself', 'about', 'would', 'or', 'at', 'if', 'because', 'no', 'think', 'what', 'out', 'up', 'time', 'make', 'as', 'even', 'now', 'year', 'people', 'one', 'friend', 'when', 'try', 'how', 'thing', 'really', 'from', 'there', 'day', 'never', 'live', 'say', 'we', 'tell', 'help', 'well', 'only', 'good', 'much', 'take', 'who', 'more', 'kill', 'could', 'die', 'end', 'bad', 'see', 'an', 'work', 'talk', 'love', 'anymore', 'way', 'some', 'any', 'other', 'why', 'then', 'need', 'family', 'anything', 'too', 'by', 'everything']\n"]}]},{"cell_type":"markdown","source":["**For Whole dataset**"],"metadata":{"id":"cBbKTtFJHjSy"},"id":"cBbKTtFJHjSy"},{"cell_type":"code","source":["# Combine word counts across all sentences\n","overall_vocabulary = defaultdict(int)\n","for counts in df['vocabulary']:\n","    for word, count in counts.items():\n","        overall_vocabulary[word] += count\n","\n","# Create a DataFrame from the overall vocabulary\n","df_vocbulay = pd.DataFrame(list(overall_vocabulary.items()), columns=['word', 'count'])\n","\n","# Display the resulting DataFrame\n","print(df_vocbulay)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yU4eW1vDCXrk","executionInfo":{"status":"ok","timestamp":1699768592591,"user_tz":-360,"elapsed":676,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"0be92ebb-4d11-44bc-e283-94c25e75b489"},"id":"yU4eW1vDCXrk","execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['I',\n"," 'be',\n"," 'to',\n"," 'and',\n"," 'the',\n"," 'not',\n"," 'my',\n"," 'a',\n"," 'have',\n"," 'do',\n"," 'it',\n"," 'of',\n"," 'that',\n"," 'in',\n"," 'but',\n"," 'for',\n"," 'just',\n"," 'this',\n"," 'so',\n"," 'you',\n"," 'with',\n"," 'want',\n"," 'get',\n"," 'can',\n"," 'she',\n"," 'go',\n"," 'like',\n"," 'they',\n"," 'feel',\n"," 'know',\n"," 'on',\n"," 'he',\n"," 'will',\n"," 'all',\n"," 'about',\n"," 'if',\n"," 'or',\n"," 'life',\n"," 'would',\n"," 'at',\n"," 'because',\n"," 'what',\n"," 'think',\n"," 'myself',\n"," 'out',\n"," 'no',\n"," 'up',\n"," 'make',\n"," 'time',\n"," 'as',\n"," 'now',\n"," 'people',\n"," 'we',\n"," 'one',\n"," 'friend',\n"," 'even',\n"," 'when',\n"," 'year',\n"," 'how',\n"," 'really',\n"," 'say',\n"," 'try',\n"," 'thing',\n"," 'there',\n"," 'from',\n"," 'day',\n"," 'tell',\n"," 'good',\n"," 'help',\n"," 'never',\n"," 'well',\n"," 'only',\n"," 'who',\n"," 'see',\n"," 'live',\n"," 'take',\n"," 'an',\n"," 'more',\n"," 'much',\n"," 'could',\n"," 'bad',\n"," 'talk',\n"," 'some',\n"," 'end',\n"," 'die',\n"," 'then',\n"," 'kill',\n"," 'love',\n"," 'work',\n"," 'other',\n"," 'why',\n"," 'way',\n"," 'need',\n"," 'any',\n"," 'by',\n"," 'school',\n"," 'too',\n"," 'here',\n"," 'anything',\n"," 'anymore']"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# To whole dataset\n","top_100_words=df_vocbulay.nlargest(100,'count')\n","top_100_words.dtypes # dtype: series object\n","buzzing_words=list(top_100_words['word'])\n","print(buzzing_words)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a0LP_2kYHNvw","executionInfo":{"status":"ok","timestamp":1699768758857,"user_tz":-360,"elapsed":17,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"716cbb26-86fc-4061-a829-3505a53f54b8"},"id":"a0LP_2kYHNvw","execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["['I', 'be', 'to', 'and', 'the', 'not', 'my', 'a', 'have', 'do', 'it', 'of', 'that', 'in', 'but', 'for', 'just', 'this', 'so', 'you', 'with', 'want', 'get', 'can', 'she', 'go', 'like', 'they', 'feel', 'know', 'on', 'he', 'will', 'all', 'about', 'if', 'or', 'life', 'would', 'at', 'because', 'what', 'think', 'myself', 'out', 'no', 'up', 'make', 'time', 'as', 'now', 'people', 'we', 'one', 'friend', 'even', 'when', 'year', 'how', 'really', 'say', 'try', 'thing', 'there', 'from', 'day', 'tell', 'good', 'help', 'never', 'well', 'only', 'who', 'see', 'live', 'take', 'an', 'more', 'much', 'could', 'bad', 'talk', 'some', 'end', 'die', 'then', 'kill', 'love', 'work', 'other', 'why', 'way', 'need', 'any', 'by', 'school', 'too', 'here', 'anything', 'anymore']\n"]}]},{"cell_type":"markdown","source":["# **Tokenizing Data**"],"metadata":{"id":"y0MYNY2O52hM"},"id":"y0MYNY2O52hM"},{"cell_type":"code","source":["corpus=df['text'].tolist()\n","len(corpus)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_5FJsSRn3-aq","executionInfo":{"status":"ok","timestamp":1699719349274,"user_tz":-360,"elapsed":10,"user":{"displayName":"Abdullah-Al Mahmud","userId":"04147353860550875582"}},"outputId":"e8bc72d6-009a-4d23-ca45-15576bd53c28"},"id":"_5FJsSRn3-aq","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["186841"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["filtered_data=[word for text in corpus for word in nltk.word_tokenize(text)]\n","# print(filtered_data)"],"metadata":{"id":"vbCXSrcz4Dko"},"id":"vbCXSrcz4Dko","execution_count":null,"outputs":[]},{"cell_type":"markdown","id":"9c060ff9","metadata":{"id":"9c060ff9"},"source":["# **Creating bigrams**\n"]},{"cell_type":"code","execution_count":null,"id":"feb52dc7","metadata":{"id":"feb52dc7","outputId":"259e585e-413f-468b-e189-4f583e36f28d","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stderr","text":[" 36%|â–ˆâ–ˆâ–ˆâ–Œ      | 3911854/10855823 [02:03<01:47, 64503.18it/s]"]}],"source":["from tqdm import tqdm\n","\n","progress_bar=tqdm(range(len(filtered_data)))\n","\n","bigrams = []\n","for words_list in filtered_data:\n","    for i in range(len(words_list) - 1):\n","        for j in range(i+1, len(words_list)):\n","            bigrams.append([words_list[i], words_list[j]])\n","            bigrams.append([words_list[j], words_list[i]])\n","    progress_bar.update(1)\n","\n","\n","# print(bigrams)"]},{"cell_type":"markdown","id":"a9c73a57","metadata":{"id":"a9c73a57"},"source":["# **List of unique words**"]},{"cell_type":"code","execution_count":null,"id":"20547a7c","metadata":{"id":"20547a7c"},"outputs":[],"source":["all_words = []\n","for bi in bigrams:\n","    all_words.extend(bi)\n","\n","all_words = list(set(all_words))\n","all_words.sort()\n","\n","print(all_words)\n","print(\"Total number of unique words are:\", len(all_words))"]},{"cell_type":"markdown","id":"2e20adfa","metadata":{"id":"2e20adfa"},"source":["### Creating dictionary of words"]},{"cell_type":"code","execution_count":null,"id":"5e8da645","metadata":{"id":"5e8da645"},"outputs":[],"source":["words_dict = {}\n","\n","counter = 0\n","for word in all_words:\n","    words_dict[word] = counter\n","    counter += 1\n","\n","print(words_dict)"]},{"cell_type":"markdown","id":"3f911c7d","metadata":{"id":"3f911c7d"},"source":["### Performing one-hot encoding"]},{"cell_type":"code","execution_count":null,"id":"7062308d","metadata":{"id":"7062308d"},"outputs":[],"source":["import numpy as np\n","\n","onehot_data = np.zeros((len(all_words), len(all_words)))\n","\n","for i in range(len(all_words)):\n","    onehot_data[i][i] = 1\n","\n","onehot_dict = {}\n","counter = 0\n","for word in all_words:\n","    onehot_dict[word] = onehot_data[counter]\n","    counter += 1\n","\n","for word in onehot_dict:\n","    print(word, \":\", onehot_dict[word])\n"]},{"cell_type":"code","execution_count":null,"id":"0a6fe9e5","metadata":{"id":"0a6fe9e5"},"outputs":[],"source":["X = []\n","Y = []\n","\n","for bi in bigrams:\n","    X.append(onehot_dict[bi[0]])\n","    Y.append(onehot_dict[bi[1]])\n","\n","X = np.array(X)\n","Y = np.array(Y)"]},{"cell_type":"markdown","id":"d218441d","metadata":{"id":"d218441d"},"source":["### Model"]},{"cell_type":"code","execution_count":null,"id":"91f1fa31","metadata":{"id":"91f1fa31"},"outputs":[],"source":["from keras.models import Sequential\n","from keras.layers import Dense\n","\n","embed_size = 2\n","\n","model = Sequential([\n","    Dense(embed_size, activation='linear'),\n","    Dense(Y.shape[1], activation = 'softmax')\n","])\n","\n","model.compile(loss = 'categorical_crossentropy', optimizer = 'adam')\n","\n"]},{"cell_type":"code","execution_count":null,"id":"3796ca1b","metadata":{"id":"3796ca1b"},"outputs":[],"source":["model.fit(X, Y, epochs = 1000, batch_size = 256, verbose = False)"]},{"cell_type":"code","execution_count":null,"id":"2e9d8ebe","metadata":{"id":"2e9d8ebe"},"outputs":[],"source":["weights = model.get_weights()[0]\n","\n","word_embeddings = {}\n","for word in all_words:\n","    word_embeddings[word] = weights[words_dict[word]]\n","\n","# print(word_embeddings)"]},{"cell_type":"code","execution_count":null,"id":"95cf5e2d","metadata":{"id":"95cf5e2d"},"outputs":[],"source":["import matplotlib.pyplot as plt\n","\n","# plt.figure(figsize = (10, 10))\n","for word in list(words_dict.keys()):\n","    coord = word_embeddings.get(word)\n","    plt.scatter(coord[0], coord[1])\n","    plt.annotate(word, (coord[0], coord[1]))\n","\n","plt.savefig('img.jpg')"]},{"cell_type":"code","execution_count":null,"id":"e116aadf","metadata":{"id":"e116aadf"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.1"},"vscode":{"interpreter":{"hash":"f06e3119828c145c4028f0fee76387e74b42caa79bccb80b4ba64fe213bb9e06"}},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}